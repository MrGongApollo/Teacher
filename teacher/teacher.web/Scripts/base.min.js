(function (e) { e.setting = {}, e.ban = { banMouseRight: function (t) { e("body").bind("contextmenu", function () { return false }); if (t) { t() } }, banSelectAll: function (t) { e("body").bind("selectstart", function () { return false }); if (t) { t() } }, banF12: function (t) { e("body").bind("keypress", function (e) { if (e.keyCode == 123) return false }) }, banAll: function () { e.ban.banMouseRight(); e.ban.banSelectAll(); e.ban.banF12() } }; var t = function () { }; t.prototype = { today: function (e) { return this.dateFormat(new Date, "yyyy-MM-dd") }, Now: function (e) { return this.dateFormat(new Date, "yyyy-MM-dd HH:mm:ss") }, MonthFirstDay: function (e) { var t = !e ? this.today() : this.dateFormat(e, "yyyy-MM-dd"); return this.dateAddDays(t, -(new Date(t).getDate() - 1)) }, MonthLastDay: function (e) { var t = this.MonthFirstDay(e); return this.dateAddDays(this.dateAddMonths(t, 1), -1) }, dateAddDays: function (e, t) { if (arguments.length != 2) { console.warn("参数数目不合法"); return } if (typeof e !== "string") { console.warn("日期类型应为string类型"); return } var n = new Date(e), a = n.getDate(); n.setDate(a + t); return this.dateFormat(n, "yyyy-MM-dd") }, dateAddMonths: function (e, t) { if (arguments.length != 2) { console.warn("参数数目不合法"); return } var n = new Date(e), a = n.getMonth(); n.setMonth(a + t); return this.dateFormat(n, "yyyy-MM-dd") }, changeDateFormat: function (e, t) { if (!e) { return "" } if (e.indexOf("/Date") == 0) { d = new Date; var n = new Date(parseInt(e.replace("/Date(", "").replace(")/", ""), 10)); var a = n.getMonth() + 1 < 10 ? "0" + (n.getMonth() + 1) : n.getMonth() + 1; var r = n.getDate() < 10 ? "0" + n.getDate() : n.getDate(); var s = "-"; s = t ? t : s; return n.getFullYear() + s + a + s + r } else { return e } }, changetoLocaleTimeString: function (e, t) { if (!e) { return "" } d = new Date; var n = new Date(parseInt(e.substr(6))); var a = n.getMonth() + 1 < 10 ? "0" + (n.getMonth() + 1) : n.getMonth() + 1; var r = n.getDate() < 10 ? "0" + n.getDate() : n.getDate(); var s = n.getHours() < 10 ? "0" + n.getHours() : n.getHours(); var o = n.getMinutes() < 10 ? "0" + n.getMinutes() : n.getMinutes(); var i = n.getSeconds() < 10 ? "0" + n.getSeconds() : n.getSeconds(); var u = "-"; u = t ? t : u; return n.getFullYear() + u + a + u + r + " " + s + ":" + o + ":" + i }, changetoLocaleTimeString2hm: function (e, t) { if (!e) { return "" } d = new Date; var n = new Date(parseInt(e.substr(6))); var a = n.getMonth() + 1 < 10 ? "0" + (n.getMonth() + 1) : n.getMonth() + 1; var r = n.getDate() < 10 ? "0" + n.getDate() : n.getDate(); var s = n.getHours() < 10 ? "0" + n.getHours() : n.getHours(); var o = n.getMinutes() < 10 ? "0" + n.getMinutes() : n.getMinutes(); var i = "-"; i = t ? t : i; return n.getFullYear() + i + a + i + r + " " + s + ":" + o }, dateFormat: function (t, n) { var a = { numeric: /N\d{1}/gi, percent: /P\d{1}/gi, currency: /C/gi, datetime: /yy(yy{0,1})|M{2}|dd|HH{1}|mm{1}|ss{1}/gi }; if (n.match(a.datetime) !== null) { var r = t; var s = { msJsonDate: /^\/Date\(\d*(|\+?\d*)\)\/$/gi, stringDate: /^\d{4}[\.\/-]?[0-1]{1}[0-9]{1}(|[\.\/-]?[0-3]{1}[0-9]{1}[\.\/-]?|\s?[0-1]{1}[0-9]{1}|:?[0-1]{1}[0-9]{1}|:?[0-1]{1}[0-9]{1}|:?\d*)$/gi, dtData: /^\d{8}\s\d{2}:\d{2}:\d{2}$/, cludeTDate: /^\d{4}-\d{2}-\d{2}(T|t)\d{2}:\d{2}:\d{2}/ }; if (t instanceof Date === false) { if (s.msJsonDate.test(t)) { var o = /^\/Date\(|\)\/$/gi; var i = (t + "").replace(o, "").split("+"); if (i.length > 1) { r = new Date(parseInt(i[0]) + parseInt(i[1])) } else { var u = new Date; var c = u.getTimezoneOffset() * 6e4; c = 0; r = new Date(parseInt(i[0]) + c) } } else if (s.stringDate.test(t)) { if (e.isNumeric(t) === true) { var d = (t + "").substr(0, 4); var l = (t + "").substr(4, 2); var g = (t + "").substr(6, 2); var f = (t + "").substr(8, 2); var y = (t + "").substr(10, 2); var w = (t + "").substr(12, 2); r = new Date(d + "/" + l + "/" + (g === "" ? "01" : g) + " " + (f === "" ? "00" : f) + ":" + (y === "" ? "00" : y) + ":" + (w === "" ? "00" : w)) } else { r = (t + "").replace(/[-\.]/g, "/"); r = new Date(r) } } else if (s.dtData.test(t)) { var d = (t + "").substr(0, 4); var l = (t + "").substr(4, 2); var g = (t + "").substr(6, 2); var f = (t + "").substr(8); r = new Date(d + "/" + l + "/" + g + f) } else if (s.cludeTDate.test(t)) { var d = (t + "").substr(0, 4); var l = (t + "").substr(5, 2); var g = (t + "").substr(8, 2); var f = (t + "").substr(11); r = new Date(d + "/" + l + "/" + g + " " + f) } } var p = function (e, t) { if (!t) { t = 2 } e = new String(e); for (var n = 0, a = ""; n < t - e.length; n++) { a += "0" } return a + e }; if (r instanceof Date) { return n.replace(a.datetime, function (e) { switch (e) { case "dd": return p(r.getDate()); case "MM": return p(r.getMonth() + 1); case "yy": return new String(r.getFullYear()).substr(2); case "yyyy": return r.getFullYear(); case "HH": return p(r.getHours()); case "mm": return p(r.getMinutes()); case "ss": return p(r.getSeconds()) } }) } else { return t } } else { return t } }, getUrlParam: function (e) { var t = new RegExp("(^|&)" + e + "=([^&]*)(&|$)"); var n = window.location.search.substr(1).match(t); if (n != null) { return unescape(n[2]) } return null }, IsNullOrEmpty: function (e) { if (e) { var t; if (e == null || e == "") { t = true } else { t = false } return t } }, Substr: function (e, t, n) { if (e && t) { return e.length > t ? e.substr(0, t) + (n || "") : e } return "" }, AddLoading: function (t) { if (e("#wxloading").length == 0) { e("<div>", { id: "wxloading" }).append(e("<div>", { class: "wx_loading_inner" }).append(e("<svg>", { class: "wx_loading_icon" })).append(e("<span>").text(t ? t : "正在加载..."))).appendTo(e("body")) } else { e("#wxloading").show() } }, RemoveLoading: function () { e("#wxloading").remove() }, AddLoadingSetClose: function (t, n, a) { e.web.AddLoading(t); setTimeout(function () { if (n) { n() } e.web.RemoveLoading() }, a || 1e3) }, toast: function (t) { switch (typeof t) { case "string": t = { text: t }; break; case "object": break; default: console.warn("toast参数不合法，必须是object或者string类型"); return } var n = { text: "", duration: 3e3 }; var a = e(window).width(); e.extend(n, t); e("#wxtoast").length == 0 ? "" : e("#wxtoast").stop().unbind().remove(); e("body").append(e("<div>", { id: "wxtoast" }).hide().text(n.text)); var r = e("#wxtoast"); r.css("left", (a - r.width()) / 2); e("#wxtoast").show().fadeOut(n.duration, function () { e("#wxtoast").remove() }) }, get: function (t, n) { try { var a = { type: "GET", contentType: "application/json;application/x-www-form-urlencoded;charset=utf-8", dataType: "json", async: false }; if (!t) { console.warn("参数不可为空！"); return } switch (typeof t) { case "string": a.url = encodeURI(t); a.data = n || {}; break; case "object": t.url = encodeURI(t.url); e.extend(a, t); break; default: console.warn("参数类型不正确，必须是string,或者object"); return } return e.ajax(a) } catch (e) { console.error(e.message) } }, getAsync: function (t, n) { try { var a = { type: "GET", contentType: "application/json;application/x-www-form-urlencoded;charset=utf-8", dataType: "json" }; if (!t) { console.warn("参数不可为空！"); return } switch (typeof t) { case "string": a.url = encodeURI(t); a.data = n || {}; break; case "object": t.url = encodeURI(t.url); e.extend(a, t); break; default: console.warn("参数类型不正确，必须是string,或者object"); return } return e.ajax(a) } catch (e) { console.error(e.message) } }, post: function (t, n) { try { if (!t) { console.warn("参数不可为空！"); return } var a = { type: "POST", async: false, contentType: "application/json;application/x-www-form-urlencoded;charset=utf-8", dataType: "json" }; switch (typeof t) { case "object": e.extend(a, t); break; case "string": a.data = n || {}; a.url = t; break; default: console.warn("参数类型不合法"); return } a.url = encodeURI(a.url); a.data = JSON.stringify(a.data); return e.ajax(a) } catch (e) { console.error(e.message) } }, postAsync: function (t, n) { try { if (!t) { console.warn("参数不可为空！"); return } var a = { type: "POST", contentType: "application/json;application/x-www-form-urlencoded;charset=utf-8", dataType: "json" }; switch (typeof t) { case "object": e.extend(a, t); break; case "string": a.data = n || {}; a.url = t; break; default: console.warn("参数类型不合法"); return } a.url = encodeURI(a.url); a.data = JSON.stringify(a.data); return e.ajax(a) } catch (e) { console.error(e.message) } } }; e.web = new t })(jQuery);